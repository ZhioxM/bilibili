<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zx.bilibili.mapper.VideoCommentMapper">
    <resultMap id="BaseResultMap" type="com.zx.bilibili.domain.VideoComment">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="videoId" jdbcType="BIGINT" property="videoId"/>
        <result column="userId" jdbcType="BIGINT" property="userId"/>
        <result column="replyUserId" jdbcType="BIGINT" property="replyUserId"/>
        <result column="rootId" jdbcType="BIGINT" property="rootId"/>
        <result column="parentId" jdbcType="BIGINT" property="parentId"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="INTEGER" property="deleted"/>
        <result column="likeCount" jdbcType="INTEGER" property="likeCount"/>
        <result column="dislikeCount" jdbcType="INTEGER" property="dislikeCount"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zx.bilibili.domain.VideoComment">
        <result column="context" jdbcType="LONGVARCHAR" property="context"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , videoId, userId, replyUserId, rootId, parentId, createTime, updateTime, deleted,
    likeCount, dislikeCount
    </sql>
    <sql id="Blob_Column_List">
        context
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.zx.bilibili.domain.VideoCommentExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_video_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.zx.bilibili.domain.VideoCommentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_video_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_video_comment
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_video_comment
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.zx.bilibili.domain.VideoCommentExample">
        delete from t_video_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zx.bilibili.domain.VideoComment">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_video_comment (videoId, userId, replyUserId,
        rootId, parentId, createTime,
        updateTime, deleted, likeCount,
        dislikeCount, context)
        values (#{videoId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{replyUserId,jdbcType=BIGINT},
        #{rootId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER},
        #{dislikeCount,jdbcType=INTEGER}, #{context,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.zx.bilibili.domain.VideoComment">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_video_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="videoId != null">
                videoId,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="replyUserId != null">
                replyUserId,
            </if>
            <if test="rootId != null">
                rootId,
            </if>
            <if test="parentId != null">
                parentId,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="likeCount != null">
                likeCount,
            </if>
            <if test="dislikeCount != null">
                dislikeCount,
            </if>
            <if test="context != null">
                context,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="videoId != null">
                #{videoId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="replyUserId != null">
                #{replyUserId,jdbcType=BIGINT},
            </if>
            <if test="rootId != null">
                #{rootId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=INTEGER},
            </if>
            <if test="likeCount != null">
                #{likeCount,jdbcType=INTEGER},
            </if>
            <if test="dislikeCount != null">
                #{dislikeCount,jdbcType=INTEGER},
            </if>
            <if test="context != null">
                #{context,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zx.bilibili.domain.VideoCommentExample"
            resultType="java.lang.Integer">
        select count(*) from t_video_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectTokSubComment" resultType="com.zx.bilibili.domain.VideoComment">
        select v.*
        from t_video_comment v
        where rootId = #{rootId}
        order by createTime desc
            limit #{topK}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_video_comment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.videoId != null">
                videoId = #{record.videoId,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                userId = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.replyUserId != null">
                replyUserId = #{record.replyUserId,jdbcType=BIGINT},
            </if>
            <if test="record.rootId != null">
                rootId = #{record.rootId,jdbcType=BIGINT},
            </if>
            <if test="record.parentId != null">
                parentId = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                createTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=INTEGER},
            </if>
            <if test="record.likeCount != null">
                likeCount = #{record.likeCount,jdbcType=INTEGER},
            </if>
            <if test="record.dislikeCount != null">
                dislikeCount = #{record.dislikeCount,jdbcType=INTEGER},
            </if>
            <if test="record.context != null">
                context = #{record.context,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_video_comment
        set id = #{record.id,jdbcType=BIGINT},
        videoId = #{record.videoId,jdbcType=BIGINT},
        userId = #{record.userId,jdbcType=BIGINT},
        replyUserId = #{record.replyUserId,jdbcType=BIGINT},
        rootId = #{record.rootId,jdbcType=BIGINT},
        parentId = #{record.parentId,jdbcType=BIGINT},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
        deleted = #{record.deleted,jdbcType=INTEGER},
        likeCount = #{record.likeCount,jdbcType=INTEGER},
        dislikeCount = #{record.dislikeCount,jdbcType=INTEGER},
        context = #{record.context,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_video_comment
        set id = #{record.id,jdbcType=BIGINT},
        videoId = #{record.videoId,jdbcType=BIGINT},
        userId = #{record.userId,jdbcType=BIGINT},
        replyUserId = #{record.replyUserId,jdbcType=BIGINT},
        rootId = #{record.rootId,jdbcType=BIGINT},
        parentId = #{record.parentId,jdbcType=BIGINT},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
        deleted = #{record.deleted,jdbcType=INTEGER},
        likeCount = #{record.likeCount,jdbcType=INTEGER},
        dislikeCount = #{record.dislikeCount,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zx.bilibili.domain.VideoComment">
        update t_video_comment
        <set>
            <if test="videoId != null">
                videoId = #{videoId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                userId = #{userId,jdbcType=BIGINT},
            </if>
            <if test="replyUserId != null">
                replyUserId = #{replyUserId,jdbcType=BIGINT},
            </if>
            <if test="rootId != null">
                rootId = #{rootId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                parentId = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=INTEGER},
            </if>
            <if test="likeCount != null">
                likeCount = #{likeCount,jdbcType=INTEGER},
            </if>
            <if test="dislikeCount != null">
                dislikeCount = #{dislikeCount,jdbcType=INTEGER},
            </if>
            <if test="context != null">
                context = #{context,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zx.bilibili.domain.VideoComment">
        update t_video_comment
        set videoId      = #{videoId,jdbcType=BIGINT},
            userId       = #{userId,jdbcType=BIGINT},
            replyUserId  = #{replyUserId,jdbcType=BIGINT},
            rootId       = #{rootId,jdbcType=BIGINT},
            parentId     = #{parentId,jdbcType=BIGINT},
            createTime   = #{createTime,jdbcType=TIMESTAMP},
            updateTime   = #{updateTime,jdbcType=TIMESTAMP},
            deleted      = #{deleted,jdbcType=INTEGER},
            likeCount    = #{likeCount,jdbcType=INTEGER},
            dislikeCount = #{dislikeCount,jdbcType=INTEGER},
            context      = #{context,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zx.bilibili.domain.VideoComment">
        update t_video_comment
        set videoId      = #{videoId,jdbcType=BIGINT},
            userId       = #{userId,jdbcType=BIGINT},
            replyUserId  = #{replyUserId,jdbcType=BIGINT},
            rootId       = #{rootId,jdbcType=BIGINT},
            parentId     = #{parentId,jdbcType=BIGINT},
            createTime   = #{createTime,jdbcType=TIMESTAMP},
            updateTime   = #{updateTime,jdbcType=TIMESTAMP},
            deleted      = #{deleted,jdbcType=INTEGER},
            likeCount    = #{likeCount,jdbcType=INTEGER},
            dislikeCount = #{dislikeCount,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>